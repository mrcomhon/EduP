import 'package:flutter/material.dart';
import 'package:audioplayers/audioplayers.dart';
import 'package:video_player/video_player.dart';

class RepeatSoundScreen extends StatefulWidget {
  @override
  _RepeatSoundScreenState createState() => _RepeatSoundScreenState();
}

class _RepeatSoundScreenState extends State<RepeatSoundScreen> {
  final List<SpeechSound> sounds = [
    SpeechSound(
      letter: '–ú',
      description: '–ó–∞–º–∫–Ω–∏ –≥—É–±—ã –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–ú-–º-–º‚Äù',
      videoPath: 'assets/videos/m.mp4',
      audioPath: 'audio/m.mp3',
    ),
    SpeechSound(
      letter: '–°',
      description: '–£–ª—ã–±–Ω–∏—Å—å, –ø—Ä–∏–æ—Ç–∫—Ä–æ–π —Ä–æ—Ç –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–°-—Å-—Å‚Äù',
      videoPath: 'assets/videos/s.mp4',
      audioPath: 'audio/s.mp3',
    ),
    SpeechSound(
      letter: '–†',
      description: '–ü–æ—Å—Ç–∞–≤—å —è–∑—ã–∫ –∑–∞ –≤–µ—Ä—Ö–Ω–∏–µ –∑—É–±—ã –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–†-—Ä-—Ä‚Äù',
      videoPath: 'assets/videos/r.mp4',
      audioPath: 'audio/r.mp3',
    ),
    SpeechSound(
      letter: '–©',
      description: '–£–ª—ã–±–Ω–∏—Å—å, –æ–∫—Ä—É–≥–ª–∏ –≥—É–±—ã –∏ —Å–∫–∞–∂–∏ ‚Äú–©-—â-—â‚Äù',
      videoPath: 'assets/videos/shch.mp4',
      audioPath: 'audio/shch.mp3',
    ),
    SpeechSound(
      letter: '–ó',
      description: '–£–ª—ã–±–Ω–∏—Å—å, –ø—Ä–∏–æ—Ç–∫—Ä–æ–π —Ä–æ—Ç –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–ó-–∑-–∑‚Äù',
      videoPath: 'assets/videos/z.mp4',
      audioPath: 'audio/z.mp3',
    ),
    SpeechSound(
      letter: '–ß',
      description: '–£–ª—ã–±–Ω–∏—Å—å, –ø—Ä–∏–∂–º–∏ —è–∑—ã–∫ –∏ —Å–∫–∞–∂–∏ ‚Äú–ß-—á-—á‚Äù',
      videoPath: 'assets/videos/ch.mp4',
      audioPath: 'audio/ch.mp3',
    ),
    SpeechSound(
      letter: '–õ',
      description: '–ü–æ—Å—Ç–∞–≤—å —è–∑—ã–∫ –∑–∞ –≤–µ—Ä—Ö–Ω–∏–µ –∑—É–±—ã –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–õ-–ª-–ª‚Äù',
      videoPath: 'assets/videos/l.mp4',
      audioPath: 'audio/l.mp3',
    ),
    SpeechSound(
      letter: '–®',
      description:
          '–£–ª—ã–±–Ω–∏—Å—å, –ø—Ä–∏–ø–æ–¥–Ω–∏–º–∏ —è–∑—ã–∫ –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–®-—à-—à‚Äù –∫–∞–∫ –ø—Ä–∏ —à–∏–ø–µ–Ω–∏–∏',
      videoPath: 'assets/videos/sh.mp4',
      audioPath: 'audio/sh.mp3',
    ),

    SpeechSound(
      letter: '–ñ',
      description: '–ì—É–±—ã –≤ —É–ª—ã–±–∫–µ, —è–∑—ã–∫ –ø—Ä–∏–ø–æ–¥–Ω—è—Ç ‚Äî —Å–∫–∞–∂–∏ ‚Äú–ñ-–∂-–∂‚Äù –∫–∞–∫ –ø—á—ë–ª–∫–∞',
      videoPath: 'assets/videos/zh.mp4',
      audioPath: 'audio/zh.mp3',
    ),
    
    SpeechSound(
      letter: '–¶',
      description:
          '–ü—Ä–æ–∏–∑–Ω–µ—Å–∏ ‚Äú–¢—Å-—Ç—Å-—Ç—Å‚Äù —Å –ø—Ä–∏–∂–∞—Ç—ã–º–∏ –∑—É–±–∞–º–∏, –∫–∞–∫ –∑–≤—É–∫ –ø—Ä–∏ –æ–¥—ë—Ä–≥–∏–≤–∞–Ω–∏–∏',
      videoPath: 'assets/videos/ts.mp4',
      audioPath: 'audio/ts.mp3',
    ),
    // –î–æ–±–∞–≤—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–≤—É–∫–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ
  ];

  @override
  void dispose() {
    for (var sound in sounds) {
      sound.controller?.dispose();
    }
    super.dispose();
  }

  Future<void> _initializeVideo(SpeechSound sound) async {
    final controller = VideoPlayerController.asset(sound.videoPath);
    await controller.initialize();
    controller.setVolume(1.0);
    setState(() {
      sound.controller = controller;
      sound.isInitialized = true;
      controller.play();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('üîä –ü–æ–≤—Ç–æ—Ä–∏ –∑–≤—É–∫')),
      body: ListView.builder(
        padding: EdgeInsets.all(16),
        itemCount: sounds.length,
        itemBuilder: (context, index) {
          final sound = sounds[index];

          return Card(
            margin: EdgeInsets.symmetric(vertical: 12),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16),
            ),
            color: Colors.purple.shade100,
            child: Padding(
              padding: const EdgeInsets.all(20),
              child: Column(
                children: [
                  Text(
                    '–ë—É–∫–≤–∞ "${sound.letter}"',
                    style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                  ),
                  SizedBox(height: 16),

                  // –í–∏–¥–µ–æ –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å"
                  sound.isInitialized && sound.controller!.value.isInitialized
                      ? AspectRatio(
                        aspectRatio: sound.controller!.value.aspectRatio,
                        child: VideoPlayer(sound.controller!),
                      )
                      : ElevatedButton.icon(
                        onPressed: () => _initializeVideo(sound),
                        icon: Icon(Icons.play_arrow),
                        label: Text('–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤–∏–¥–µ–æ'),
                      ),

                  if (sound.isInitialized)
                    Padding(
                      padding: const EdgeInsets.only(top: 12.0),
                      child: ElevatedButton.icon(
                        onPressed: () {
                          setState(() {
                            final controller = sound.controller!;
                            controller.value.isPlaying
                                ? controller.pause()
                                : controller.play();
                          });
                        },
                        icon: Icon(
                          sound.controller!.value.isPlaying
                              ? Icons.pause
                              : Icons.play_arrow,
                        ),
                        label: Text(
                          sound.controller!.value.isPlaying
                              ? '–ü–∞—É–∑–∞'
                              : '–ü—Ä–æ–∏–≥—Ä–∞—Ç—å –≤–∏–¥–µ–æ',
                        ),
                      ),
                    ),

                  SizedBox(height: 12),
                  Text(
                    sound.description,
                    style: TextStyle(fontSize: 18),
                    textAlign: TextAlign.center,
                  ),
                  SizedBox(height: 12),
                  ElevatedButton.icon(
                    onPressed: () {
                      final player = AudioPlayer();
                      player.setVolume(1.0);
                      player.play(AssetSource(sound.audioPath));
                    },
                    icon: Icon(Icons.volume_up),
                    label: Text('–ü—Ä–æ–∏–≥—Ä–∞—Ç—å –∑–≤—É–∫'),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}

class SpeechSound {
  final String letter;
  final String description;
  final String videoPath;
  final String audioPath;
  VideoPlayerController? controller;
  bool isInitialized;

  SpeechSound({
    required this.letter,
    required this.description,
    required this.videoPath,
    required this.audioPath,
    this.controller,
    this.isInitialized = false,
  });
}
